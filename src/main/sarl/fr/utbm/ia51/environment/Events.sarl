/** 
 * 
 */
package fr.utbm.ia51.environment

import fr.utbm.ia51.agents.Person
import fr.utbm.ia51.tools.Point2f
import fr.utbm.ia51.tools.Vector2f
import java.util.ArrayList


// Perception sent to the agents
event Perception {
	val position : Point2f
	val orientation : Vector2f
	val currentLinearSpeed : float
	val maxLinear : float
	val currentAngularSpeed : float
	val maxAngular : float
	val bellRings : boolean

	// liste des points les plus proches des objets per√ßus par l'agent (dans son champ de vision)
	var perceivedObjects = <Point2f>newArrayList

	new(position : Point2f, orientation : Vector2f, currentLinearSpeed : float, maxLinear : float,currentAngularSpeed : float,maxAngular : float, bellRings: boolean, perceivedObjects : ArrayList<Point2f>) {
		this.position = position
		this.orientation = orientation
		this.currentLinearSpeed = currentLinearSpeed
		this.maxLinear = maxLinear
		this.currentAngularSpeed = currentAngularSpeed
		this.maxAngular = maxAngular
		this.bellRings = bellRings
		this.perceivedObjects = perceivedObjects
	}
	
	
}

// Influence sent to the environment by an agent
event Influence {
	val caller : Person
	val time : int
	val wantedPosX : double
	val wantedPosY : double

	new(caller : Person, time : int, wantedPosX : double, wantedPosY : double) {
		this.caller = caller
		this.time = time
		this.wantedPosX = wantedPosX
		this.wantedPosY = wantedPosY
	}
}

event ActionToPerson {
	val newPosX : double
	val newPosY : double
	
	new(newPosX : double, newPosY : double) {
		this.newPosX = newPosX
		this.newPosY = newPosY
	}
}

// When the loop starts
event RunBeginingOfStep

// When the loop ends
event RunEndOfStep
